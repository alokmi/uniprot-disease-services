schema {
    query: Query
}

type Query {
    disease(diseaseId: String): Disease
    protein(accession: String): Protein
}

type Disease {
    diseaseId: String
    name: String
    desc: String
    acronym: String
    source: String
    note: String
    synonyms: [Synonym!]
    variations: [Variation]
    diseaseProteins: [DiseaseProtein!]
    publications: [Publication!]
    children: [Disease!]
}

type Protein {
    proteinId: String
    name: String
    accession: String
    gene: String
    desc: String
    variations: [Variation]
    proteinCrossRefs: [ProteinCrossRef!]
    interactions: [Interaction!]
    geneCoordinates: [GeneCoordinate!]
    publications: [Publication!]
    diseaseProteins: [DiseaseProtein!]
}
type Variation {
    type: String
    cvId: String
    ftId: String
    description: String
    alternativeSequence: String
    begin: String
    end: String
    molecule: String
    xrefs: [DbReferenceObject!]
    evidences: [VariationEvidence!]
    wildType: String
    frequency: Float
    polyphenPrediction: String
    polyphenScore: Float
    siftPrediction: String
    siftScore: Float
    somaticStatus: Int
    cytogeneticBand: String
    consequenceType: String
    genomicLocation: String
    association: [VariantAssociation!]
    clinicalSignificances: String
    sourceType: VariantSourceTypeEnum
}

type DbReferenceObject{
    name: String
    id: String
    url: String
    alternativeUrl: String
    reviewed: Boolean
}

type VariationEvidence {
    code: String
    label: String
    source: DbReferenceObject
}

type VariantAssociation {
    name: String
    description: String
    xrefs: [DbReferenceObject!]
    evidences: [VariationEvidence!]
    disease: Boolean
}

enum VariantSourceTypeEnum{
    large_scale_study uniprot, mixed
}

type ProteinCrossRef{
    primaryId: String
    description: String
    dbType: String
    isoformId: String
    drugs: [Drug!]
}

type Drug {
    name: String
    sourceType: String
    sourceId: String
    moleculeType: String
    clinicalTrialPhase: Int
    mechanismOfAction: String
    clinicalTrialLink: String
}

type Interaction{
    type: String
    accession: String
    gene: String
    experimentCount: Int
    firstInteractor: String
    secondInteractor: String
}

type GeneCoordinate{
    chromosomeNumber: String
    startPos: Int
    endPos: Int
    enGeneId: String
    enTranscriptId: String
    enTranslationId: String
}

type Synonym{
    name: String
    source: String
}

type Publication {
    pubType: String
    pubId: String
}

type DiseaseProtein {
    disease: Disease
    protein: Protein
    isMapped: Boolean
}